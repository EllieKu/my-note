"use strict";(self.webpackChunkmy_note=self.webpackChunkmy_note||[]).push([[4777],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=u(n),f=i,d=m["".concat(c,".").concat(f)]||m[f]||p[f]||o;return n?r.createElement(d,a(a({ref:t},s),{},{components:n})):r.createElement(d,a({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3614:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return s}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={},c="Basic",u={unversionedId:"Go/basic",id:"Go/basic",isDocsHomePage:!1,title:"Basic",description:"PreDeclared Identifiers",source:"@site/docs/06-Go/basic.md",sourceDirName:"06-Go",slug:"/Go/basic",permalink:"/my-note/docs/Go/basic",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/06-Go/basic.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Binary number \u4e8c\u9032\u5236",permalink:"/my-note/docs/Go/Operate-System/binary"},next:{title:"Goroutine",permalink:"/my-note/docs/Go/goroutine"}},s=[{value:"PreDeclared Identifiers",id:"predeclared-identifiers",children:[{value:"??",id:"",children:[]},{value:"slice",id:"slice",children:[]}]}],p={toc:s};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"basic"},"Basic"),(0,o.kt)("h2",{id:"predeclared-identifiers"},"PreDeclared Identifiers"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Types: bool byte(alias for uint8) complex64 complex128 error float32 float64\nint int8 int16 int32 int64\nrune(alias for int32, represents a Unicode code point)\nstring uint uint8 uint16 uint32 uint64 uintpt"),(0,o.kt)("li",{parentName:"ul"},"Constants: true false iota"),(0,o.kt)("li",{parentName:"ul"},"Zero value: nil"),(0,o.kt)("li",{parentName:"ul"},"Functions: append cap close complex copy delete imag len make new panic print println real recover")),(0,o.kt)("h3",{id:""},"??"),(0,o.kt)("p",null,"Type conversions: The expression T(v) converts the value v to the type T.\nPointer: holds the memory address of a value:"),(0,o.kt)("p",null,"*T is a pointer to a T value"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"var p *int\n")),(0,o.kt)("p",null,"The & operator generates a pointer to its operand."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"i := 42\np = &i\n")),(0,o.kt)("p",null,"The * operator denotes the pointer's underlying value."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"fmt.Println(*p) // read i through the pointer p\n*p = 21         // set i through the pointer p\n")),(0,o.kt)("h3",{id:"slice"},"slice"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A slice is a dynamically-sized, flexible view into the elements of an array."),(0,o.kt)("li",{parentName:"ul"},"Slices are like references to arrays."),(0,o.kt)("li",{parentName:"ul"},"The length of a slice is the number of elements it contains."),(0,o.kt)("li",{parentName:"ul"},"The capacity of a slice is the number of elements in the underlying array, counting from the first element in the slice.")))}m.isMDXComponent=!0}}]);